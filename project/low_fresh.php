<head><title>Displaying the Worst Fresh Movies</title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

$item = "hi";
//Determine if any input was actually collected
if (empty($item)) {
   echo "empty <br><br>";

} else {
  echo "<h2>Worst Fresh Rated movies</h2>";

   //Prepare a statement that we can later execute. The ?'s are placeholders for
   //parameters whose values we will set before we run the query.
   if ($stmt = $conn->prepare("CALL low_fresh()")) {

      //Attach the ? in prepared statements to variables (even if those variables
      //don't hold the values we want yet).  First parameter is a list of types of
      //the variables that follow: 's' means string, 'i' means integer, 'd' means
      //double. E.g., for a statment with 3 ?'s, where middle parameter is an integer
      //and the other two are strings, the first argument included should be "sis".
      //$stmt->bind_param();

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if (($result) && ($result->num_rows != 0)) {

            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> movieID </th><th> movie name </th><th> tomatometer rating (out of 100) </th></tr>";

            //Report result set by visiting each row in it
            $dataPoints = array();
            while ($row = $result->fetch_row()) {
               echo "<tr>";
              
                 echo "<td>".$row[0]."</td>";
                 array_push($dataPoints, array( "label"=> $row[1], "y"=> $row[2]));
               echo "<td>".$row[1]."</td>";
	       echo "<td>".$row[2]."</td>";
               echo "</tr>";

            }



            echo "</table>";

         }      else {
            echo "Not found";

                 }

         //We are done with the result set returned above, so free it
         $result->free_result();

      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
         //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error;
   }
}




//Close the connection created in open.php
$conn->close();
?>
</body>



<html>
<head>
<script>
window.onload = function () {
        var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Worst Fresh Movies"
                },
                data: [{
                        type: "bar", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPoints, JSON_NUMERIC_CHECK); ?>
                }]
        });
        chart.render();
}
</script>
</head>
<body>
        <div id="chartContainer" style="height: 400px; width: 100%;"></div>
	        <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>